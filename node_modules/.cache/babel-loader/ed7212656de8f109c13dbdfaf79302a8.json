{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\icruz\\\\Desktop\\\\Capacitacion\\\\ReactJS\\\\ReactExpenseItem\\\\src\\\\components\\\\Expenses\\\\JS\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"../CSS/Expenses.css\";\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItems\";\nimport ExpensesFilter from \"../../ExpensesNew/JS/ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [enteredYear, setEnteredYear] = useState('');\n\n  const filterByYear = year => {\n    setEnteredYear(year);\n  };\n\n  let items = props.items;\n  const date = props.items;\n  const targetYears = [2021, 2022]; // Add the years here which you want to filter on\n\n  const dates = date.filter(d => {\n    const curYear = new Date(d).getFullYear();\n    return targetYears.includes(curYear);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onFilterByYear: filterByYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), dates.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"3K01tuX0QNReMb230Q7J7p9k5oI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/icruz/Desktop/Capacitacion/ReactJS/ReactExpenseItem/src/components/Expenses/JS/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","Expenses","props","enteredYear","setEnteredYear","filterByYear","year","items","date","targetYears","dates","filter","d","curYear","Date","getFullYear","includes","map","item","title","amount"],"mappings":";;;AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMO,YAAY,GAAIC,IAAD,IAAU;AAC7BF,IAAAA,cAAc,CAACE,IAAD,CAAd;AACD,GAFD;;AAGA,MAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB;AACA,QAAMC,IAAI,GAAGN,KAAK,CAACK,KAAnB;AACA,QAAME,WAAW,GAAG,CAAC,IAAD,EAAO,IAAP,CAApB,CARuB,CAQW;;AAClC,QAAMC,KAAK,GAAGF,IAAI,CAACG,MAAL,CAAaC,CAAD,IAAO;AAC/B,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASF,CAAT,EAAYG,WAAZ,EAAhB;AACA,WAAON,WAAW,CAACO,QAAZ,CAAqBH,OAArB,CAAP;AACD,GAHa,CAAd;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,KAAK,CAACO,GAAN,CAAUC,IAAI,iBAAK,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEA,IAAI,CAACC,KAAzB;AAAgC,MAAA,MAAM,EAAED,IAAI,CAACE,MAA7C;AAAqD,MAAA,IAAI,EAAEF,IAAI,CAACV;AAAhE;AAAA;AAAA;AAAA;AAAA,YAAnB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApBQP,Q;;KAAAA,Q;AAqBT,eAAeA,QAAf","sourcesContent":["import \"../CSS/Expenses.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItems\";\r\nimport ExpensesFilter from \"../../ExpensesNew/JS/ExpenseFilter\";\r\n\r\nfunction Expenses(props) {\r\n  \r\n  const [enteredYear, setEnteredYear] = useState('');\r\n  const filterByYear = (year) => {\r\n    setEnteredYear(year)\r\n  }\r\n  let items = props.items;\r\n  const date = props.items;\r\n  const targetYears = [2021, 2022]; // Add the years here which you want to filter on\r\n  const dates = date.filter((d) => {\r\n    const curYear = new Date(d).getFullYear();\r\n    return targetYears.includes(curYear);\r\n  })\r\n\r\n  return (\r\n    <div className=\"expenses\">\r\n      <ExpensesFilter onFilterByYear={filterByYear}/>\r\n      {dates.map(item =>  <ExpenseItem title={item.title} amount={item.amount} date={item.date}/>)}\r\n    </div>\r\n  );\r\n}\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}